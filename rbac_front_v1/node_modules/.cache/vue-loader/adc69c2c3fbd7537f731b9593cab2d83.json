{"remainingRequest":"E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\src\\views\\face\\index.vue?vue&type=style&index=0&id=3d7de03a&scoped=true&lang=css&","dependencies":[{"path":"E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\src\\views\\face\\index.vue","mtime":1705136613822},{"path":"E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\node_modules\\css-loader\\dist\\cjs.js","mtime":1705038911113},{"path":"E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1705038915249},{"path":"E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\node_modules\\postcss-loader\\src\\index.js","mtime":1705038913221},{"path":"E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1705038908307},{"path":"E:\\IDEA CODE\\rbacv1\\rbac_front_v1\\node_modules\\vue-loader\\lib\\index.js","mtime":1705038915248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2FtZXJhIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/face","sourcesContent":["<template>\r\n  <div class=\"camera\">\r\n    <video ref=\"video\" width=\"640\" height=\"480\" autoplay></video>\r\n    <button @click=\"captureAndProcessImage\">拍照并处理</button>\r\n    <canvas ref=\"canvas\" width=\"640\" height=\"480\" style=\"display: none;\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CameraComponent\",\r\n  data(){\r\n    return {\r\n      employeeId: window.sessionStorage.getItem(\"userId\")\r\n    }\r\n  },\r\n  methods: {\r\n    async setupCamera() {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        this.$refs.video.srcObject = stream;\r\n      } catch (error) {\r\n        console.error('Error accessing the camera:', error);\r\n      }\r\n    },\r\n    captureAndProcessImage() {\r\n      const canvas = this.$refs.canvas;\r\n      const context = canvas.getContext('2d');\r\n      const video = this.$refs.video;\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n      // 将图像转换为Base64编码的字符串\r\n      let base64Image = canvas.toDataURL('image/png');\r\n      // 去除Base64字符串中的前缀\r\n      base64Image = base64Image.replace(/^data:image\\/png;base64,/, '');\r\n      //console.log(base64Image); // 打印到控制台或发送到后端\r\n\r\n      this.sendImageToBackend(base64Image);\r\n\r\n    },\r\n    async sendImageToBackend(base64Image) {\r\n      try {\r\n        const payload = {\r\n          base64Image: base64Image,\r\n          employeeId: this.employeeId,\r\n          // 可以添加其他需要的数据\r\n        };\r\n        const response = await this.$http.post('/upload-image', payload);\r\n        if(response.data.status === 'fail'){\r\n          if(response.data.msg === 'No face detected in the image.'){\r\n            alert(\"未检测到人脸，请重新拍照！\");\r\n          }else{\r\n            alert\r\n          }\r\n        }\r\n        console.log('Image sent to backend successfully');\r\n      } catch (error) {\r\n        console.error('Error sending the image to backend:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.setupCamera();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.camera {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n</style>\r\n"]}]}